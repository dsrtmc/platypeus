.main {
    display: flex;
    justify-content: flex-end;
    flex-basis: 0;
    gap: 0;
}

.top {
    position: relative;
    display: flex;
    gap: 1rem;
    justify-content: center;
    width: 100%;
}

.left {
    display: flex;
    gap: 1rem;
    width: 100%;
    justify-content: flex-start;
}

.center {
    display: flex;
}

.right {
    display: flex;
    justify-content: flex-end;
    width: 100%;
}

.middle {
    display: flex;
    gap: 1rem;
    justify-content: center;
    width: 100%;
}

.bottom {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    width: 100%;
}

.box {
    display: flex;
    align-items: center;
    gap: 2rem;
    flex-direction: column;
    width: 100%;
}

.words {
    display: flex;
    /* TODO: align-items: flex-start; or something because if there's 2 lines (not 3) then it looks off */
    align-items: flex-start;
    flex-wrap: wrap;
    gap: 0.75rem;
    font-size: 2rem;
    /* TODO: GET CANCER HOW CAN I MAKE FLEX-WRAP LIMIT TO 3 ROWS MAN HOLY SHIT */
    height: calc(100px * calc(2 * 0.75));
    overflow: hidden;
}

.words:active {
    outline: none;
}

.words:focus {
    outline: none;
}

.wordsWrapper {
    
}

.wordsEnter {
    opacity: 0;
}

.wordsEnterActive {
    opacity: 1;
    transition: opacity 150ms;
}

.wordsEnterDone {
    opacity: 1;
}

.wordsExit {
    opacity: 1;
}

.wordsExitActive {
    opacity: 0;
    transition: opacity 150ms;
}

.wordsExitDone {
    opacity: 0;
}

.words:nth-col(2) {
    margin-top: 3rem;
}

.word {
    display: flex;
}

.letter {
    color: var(--sub-color);
}

.caret {
    position: absolute;
    background-color: var(--main-color);
    border-radius: 10%;
    width: 3px;
    height: calc(2rem + 0.5rem); /* TODO: var(--font-size) */
    transition: all ease var(--caret-speed);
}

.blinking {
    animation: 1.25s ease infinite blink;
}

.hidden {
    visibility: hidden;
}

@keyframes blink {
    20% {
        opacity: 100%;
    }
    50% {
        opacity: 0;
    }
    80% {
        opacity: 100%;
    }
}

.correct {
    color: var(--text-color) !important;
}

.incorrect {
    color: var(--error-color) !important;
}

.error {
    text-decoration: underline;
    text-decoration-color: var(--error-color);
}

.modeSettingSelection {
    display: flex;
    gap: 1rem;
}

.modeSettingButton {
    all: unset;
    color: var(--sub-color);
    transition: color, filter 200ms ease;
}

.modeSettingButton:hover {
    cursor: pointer;
    color: var(--text-color);
}

.modeSettingButton:active {
    filter: opacity(75%);
}

.timer {
    font-size: 2rem;
}

.wordProgress {
    font-size: 2rem;
}

.counter {
    font-size: 2rem;
    /*margin-right: auto;*/
}

.mode {
    display: flex;
    align-items: center;
    gap: 1rem;
    transition: all 150ms ease;
}

.mode:hover {
    cursor: pointer;
    color: var(--sub-color);
}

.restart {
    all: unset;
    color: var(--sub-color);
    transition: color 150ms ease;
    padding: .75rem 1.5rem;
    font-size: 1.25rem;
    border: 2px solid #fff0;
}

.restart:hover {
    cursor: pointer;
    color: var(--text-color);
}

.restart:focus {
    color: var(--text-color);
    border: 2px solid var(--text-color);
    border-radius: 10px;
}

.modeSelection {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
}

.languageButton {
    all: unset;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1ch;
    color: var(--sub-color);
    transition: color 200ms ease;
}

.languageButton:hover {
    color: var(--text-color);
}

.modeButton {
    all: unset;
    color: var(--sub-color);
    transition: color 200ms ease;
}

.modeButton:hover {
    color: var(--text-color);
}

.testConfig {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: var(--sub-alt-color);
    gap: 1rem;
    height: 100%;
    border-radius: 0.5rem;
    padding: 8px 20px;
    font-size: 0.8rem;
}

.spacer {
    height: 100%;
    width: 3px;
    background-color: var(--sub-color);
    filter: opacity(25%);
    border-radius: var(--roundness);
}

.languageList {
    display: flex;
    /* TODO: make it more responsive */
    width: calc(var(--wrapper-width) * 0.75);
    max-height: 700px;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.languageList .languageListItem:first-child {
    border-top-left-radius: var(--roundness);
    border-top-right-radius: var(--roundness);
}

.languageList .languageListItem:last-child {
    border-bottom-left-radius: var(--roundness);
    border-bottom-right-radius: var(--roundness);
}

.languageListItem {
    border: 0;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    width: 100%;
    padding: .25rem 1rem;
    background-color: var(--sub-alt-color);
    color: var(--text-color);
    font-size: 1rem; /* kind of funny but it's because of `TestConfig` overriding the size */
}

.languageListItem:hover {
    color: var(--sub-alt-color);
    background-color: var(--text-color);
}

.selected {
    color: var(--main-color) !important;
}
